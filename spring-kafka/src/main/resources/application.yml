server:
  port: 8080
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
spring:
  kafka:
    bootstrap-servers:  192.168.3.203:9092,192.168.3.204:9092,192.168.3.205:9092
    producer:
      retries: 3
      acks: all
      batch-size: 1000
      buffer-memory: 10485760
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      #transaction-id-prefix: kafka_tx.
      properties:
        linger.ms: 500
        partitioner.class: com.geek.springkafka.CustomizePartitioner
    consumer:
      group-id: test-consumer1
      enable-auto-commit: true
      auto-commit-interval: 1000
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 2000
      # 单次poll，broker返回给消费者最小的数据量
      fetch-min-size: 1024
      # 单次poll间隔的时间，和fetch-min-size比，看哪个先满足
      fetch-max-wait: 10000
      properties:
        # 消费会话超时时间(超过这个时间consumer没有发送心跳,就会触发rebalance操作)
        session.timeout.ms: 120000
        # 消费端监听的topic不存在时，项目启动会报错
        request.timeout.ms: 180000
    listener:
      missing-topics-fatal: true
      # 当打开批处理开关时，监听器的入参必须都是list，否则报错
      type: batch
      # 并发消费实例3个，最大不要超过topic的分区数
      concurrency: 3
